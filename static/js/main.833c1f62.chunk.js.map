{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/Section/Section.jsx","App.jsx","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","className","sryles","btn","type","id","onClick","Statistics","good","neutral","bad","total","positivePercentage","styles","list","Notification","message","text","Section","title","children","container","App","state","addFeedBack","event","stateKey","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","percent","objKey","Object","keys","Math","round","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0NAgBeA,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OAEpBD,EAAQE,KAAI,SAAAC,GAAM,OAEd,wBAAQC,UAAWC,IAAOC,IAAKC,KAAK,SAAsBC,GAAIL,EAAQM,QAASR,EAA/E,SAAiGE,GAA/CA,O,gBCiB3CO,EArBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OAEf,qBAAIX,UAAWY,IAAOC,KAAtB,UAEI,wCAAWN,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,GAA0C,EAAlE,Y,gBCAOG,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAEjB,mBAAGf,UAAWY,IAAOI,KAArB,SAA4BD,K,gBCYjBE,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,sBAAKnB,UAAWY,IAAOQ,UAAvB,UAEA,oBAAIpB,UAAWY,IAAOM,MAAtB,SAA8BA,IAC7BC,M,gBCyDME,E,4MAxDXC,MAAQ,CACJf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTc,YAAc,SAAAC,GAEV,IAAMC,EAAWD,EAAME,OAAOtB,GAC9B,EAAKuB,UAAS,SAACC,GAAD,sBAAmBH,EAAWG,EAAUH,GAAY,O,EAItEI,mBAAqB,WAAO,IAAD,EAEQ,EAAKP,MACpC,OAHuB,EAEff,KAFe,EAETC,QAFS,EAEAC,K,EAI3BqB,gCAAkC,WAE9B,IAAMpB,EAAQ,EAAKmB,qBAGnB,OADuB,IADN,EAAKP,MAAdf,KACqBG,G,4CAKjC,WAEK,IAAMA,EAAQqB,KAAKF,qBACbG,EAAUD,KAAKD,kCAHjB,EAI2BC,KAAKT,MAA5Bf,EAJJ,EAIIA,KAAMC,EAJV,EAIUA,QAASC,EAJnB,EAImBA,IAClBwB,EAASC,OAAOC,KAAKJ,KAAKT,OAEhC,OAEI,eAAC,EAAD,CAASJ,MAAO,wBAAhB,UAEI,cAAC,EAAD,CAAiBtB,QAASqC,EAAQpC,gBAAiBkC,KAAKR,gBAErDb,GAAS,cAAC,EAAD,CACRH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoByB,KAAKC,MAAML,MAEjCtB,GAAS,cAAC,EAAD,CAAcK,QAAS,6B,GAlDhCuB,a,eCDlBC,EAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,kBCAjED,EAAOC,QAAU,CAAC,IAAM,+B,kBCAxBD,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,KAAO,8B","file":"static/js/main.833c1f62.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport sryles from './FeedbackOptions.module.css'\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n\r\n    options.map(option => (\r\n       \r\n        <button className={sryles.btn} type=\"button\" key={option} id={option} onClick={onLeaveFeedback}>{option}</button>\r\n        \r\n    ))\r\n    \r\n)\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired\r\n}\r\nexport default FeedbackOptions","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css'\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    \r\n    <ul className={styles.list}>\r\n\r\n        <li>Good: {good }</li>\r\n        <li>Neutral: {neutral }</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total }</li>\r\n        <li>Positive feedback: {positivePercentage ? positivePercentage : 0} %</li>\r\n        \r\n    </ul>\r\n    \r\n)\r\nStatistics.propTypes = {\r\n    good:PropTypes.number.isRequired,\r\n    neutral:PropTypes.number.isRequired,\r\n        bad:PropTypes.number.isRequired,\r\n    total:PropTypes.number.isRequired,\r\n    positivePercentage:PropTypes.number.isRequired\r\n}\r\n\r\nexport default Statistics","import PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css'\r\nconst Notification = ({ message }) => (\r\n    \r\n    <p className={styles.text}>{message}</p>\r\n    \r\n)\r\nNotification.propTypes = {\r\n    message:PropTypes.string.isRequired\r\n}\r\nexport default Notification","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            \r\n        <h2 className={styles.title}>{title}</h2>\r\n        {children}\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\nexport default Section","import FeedbackOptions from './components/FeedbackOptions'\r\nimport Statistics from './components/Statistics/Statistics'\r\nimport Notification from './components/Notification'\r\nimport Section from './components/Section'\r\nimport React, { Component } from 'react';\r\n\r\nclass App extends Component {\r\n    \r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    };\r\n    \r\n    addFeedBack = event => {\r\n\r\n        const stateKey = event.target.id;\r\n        this.setState((prevState) => ({ [stateKey]: prevState[stateKey] + 1 }));\r\n        \r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n\r\n        const { good, neutral, bad } = this.state\r\n        return (good + neutral + bad)\r\n    }\r\n     \r\n    countPositiveFeedbackPercentage = () => {\r\n\r\n        const total = this.countTotalFeedback()\r\n        const { good } = this.state;\r\n        const percent = good * 100 / total;\r\n        return percent\r\n    }  \r\n    \r\n    \r\n    render() {\r\n\r\n         const total = this.countTotalFeedback()\r\n         const percent = this.countPositiveFeedbackPercentage()\r\n         const { good, neutral, bad } = this.state\r\n        const objKey = Object.keys(this.state)\r\n        \r\n        return (\r\n        \r\n            <Section title={\"Please leave feedback\"} >\r\n                \r\n                <FeedbackOptions options={objKey} onLeaveFeedback={this.addFeedBack} />\r\n                \r\n                {!!total && <Statistics\r\n                    good={good}\r\n                    neutral={neutral}\r\n                    bad={bad}\r\n                    total={total}\r\n                    positivePercentage={Math.round(percent)} />}\r\n                \r\n                {!total && <Notification message={'No feedback given'} />}\r\n                \r\n             </Section>\r\n               \r\n             )\r\n    }\r\n}\r\n\r\nexport default App;","import 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2h9qE\",\"title\":\"Section_title__3MLip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1x28A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2qmxJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1_DxP\"};"],"sourceRoot":""}